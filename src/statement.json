{
	"if": { "prefix": "if", "body": ["if (${1:condition}) {\n\t${2}\n}"], "description": "if statement \n" },
	"if/else": {
		"prefix": "ife",
		"body": ["if (${1:condition}) {\n\t${2}\n} else {\n\t${3}\n}"],
		"description": "if/else statement \n"
	},
	"else if": {
		"prefix": "ei",
		"body": ["else if (${1:condition}) {\n\t${2}\n}"],
		"description": "else if statement \n"
	},
	"else": { "prefix": "el", "body": ["else {\n\t${1}\n}"], "description": "else statement \n" },
	"switch": {
		"prefix": "swi",
		"body": ["switch (${1:expression}) {\n\tcase '${2:value}':\n\t\t${3}\n\t\tbreak;\n\tdefault:\n\t\tbreak;\n}"],
		"description": "switch statement\n"
	},
	"case": {
		"prefix": "cas",
		"body": ["case ${1:value}:\n\t${2}\n\t\tbreak;"],
		"description": "switch's case statement \n"
	},

	"for-in": {
		"prefix": "fin",
		"body": [
			"for (let ${1:property} in ${2:object}) {\n\tif (${2:object}.hasOwnProperty(${1:property})) {\n\t\t${3}\n\t}\n}"
		],
		"description": "The for...in statement iterates over all enumerable properties of an object that are keyed by strings (ignoring ones keyed by Symbols), including inherited enumerable properties.\n"
	},
	"for-of": {
		"prefix": "fof",
		"body": ["for (let ${1:variable} of ${2:iterable}) {\n\t${3}\n}"],
		"description": "The for...of statement creates a loop iterating over iterable objects, including: built-in String, Array, array-like objects (e.g., arguments or NodeList), TypedArray, Map, Set, and user-defined iterables. It invokes a custom iteration hook with statements to be executed for the value of each distinct property of the object.\n"
	},
	"for loop iterable": {
		"prefix": ["fl", "fo", "for"],
		"body": [
			"for (let ${1:index} = 0, ${2:length} = ${3:iterable}.length; ${1:index} < ${2:length}; ${1:index} += 1) {\n\tconst element = ${3}[${1}];\n\t${4}\n}"
		],
		"description": "for loop iterable\n"
	},
	"for loop iterable(reverse)": {
		"prefix": ["flr", "forr"],
		"body": [
			"for (let ${1:index} = ${2:iterable}.length - 1; ${1:index} >= 0; ${1:index} -= 1) {\n\tconst element = ${2}[${1}];\n\t${4}\n}"
		],
		"description": "reverse for loop iterable\n"
	},
	"while iteration": {
		"prefix": "wh",
		"body": ["while (${1:condition}) {\n\t${2}\n}"],
		"description": "while iteration\n"
	},
	"while iteration decrementing": {
		"prefix": "whi",
		"body": ["let ${1:iterable}Index = ${1:array}.length\nwhile (${1:iterableIndex}Index--) {\n\t${2}\n}"],
		"description": "while iteration decrementing\n"
	}
}
